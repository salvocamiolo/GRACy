import os
import sys
import argparse

parser = argparse.ArgumentParser(description="This tool perform a genome annoation submission to ENA")
parser.add_argument("-e","--EMBL",required=True, help="The annoation file in ENBL bank format generated by the script gracy2embl.py")
parser.add_argument("-p","--project",required=True,help="The ENA project accession number to add the genome annotation to")
parser.add_argument("-s","--sample",required=True,help="The ENA sample accession number to add the genome annotation to")
parser.add_argument("-o","--outputPrefix",required=True,help="the prefix of the generated output files")
parser.add_argument("-t","--validation",required=True,help="tells webin-cl to perform a test submissio to validate the annoatation file")
parser.add_argument("-i","--installationDirectory",required=True,help="The GRACy installation directory")

args = vars(parser.parse_args())

emblFile = args['EMBL']
projectNumber  = args['project']
sampleNumber = args['sample']
prefix = args['outputPrefix']
validation = args['validation'] #If yes the submission will only be validated
installationDirectory = args['installationDirectory']

#copy the embl file in the current directory
os.system("cp "+emblFile+" ./")

emblFile = (emblFile.split("/"))[-1]
#retrieveing assembly info from embl file
infile = open(emblFile)
while True:
    line = infile.readline().rstrip()
    if not line:
        break

    if "FT   source          " in line:
        genomeLen = (((line.split(" "))[-1]).split(".."))[-1]
    if "FT                   /strain=" in line:
        strainName =( (line.split("="))[-1]).replace("\"","")
    if "CC   Assembly Method       ::" in line:
        assemblyTool = (line.split(":: "))[-1]
    if "CC   Coverage              :: " in line:
        assemblyCoverage = ((line.split(":: "))[-1]).replace("x","")
    if "CC   Sequencing Technology :: " in line:
        sequencingPlatform = (line.split(":: "))[-1]
infile.close()

#prearing the chromosome list
outfile = open("chromosome.list","w")
outfile.write(strainName+"\t"+"whole_genome\tmonopartite\n")
outfile.close()

#preparing the manifest file
outfile = open(prefix+"_manifest.txt","w")
outfile.write("STUDY\t"+projectNumber+"\n")
outfile.write("SAMPLE\t"+sampleNumber+"\n")
outfile.write("ASSEMBLYNAME\t"+strainName+"\n")
outfile.write("ASSEMBLY_TYPE\tisolate\n")
outfile.write("COVERAGE\t"+assemblyCoverage+"\n")
outfile.write("PROGRAM\t"+assemblyTool+"\n")
outfile.write("PLATFORM\t"+sequencingPlatform+"\n")
outfile.write("MOLECULETYPE\tgenomic DNA\n")
outfile.write("FLATFILE\t"+emblFile+".gz\n")
outfile.write("CHROMOSOME_LIST\tchromosome.list.gz\n")
outfile.close()

#compressing files
os.system("gzip "+emblFile)
os.system("gzip chromosome.list")

#submitting/Validating to ENA
if validation == "yes":
    os.system(installationDirectory+"/src/conda/bin/java -jar "+installationDirectory+"/src/scripts/dbsubmission/utils/webin-cli-4.2.0.jar -username Webin-50760 -password Elisaegizia14 -context genome -manifest "+prefix+"_manifest.txt -validate")




